package com.braffa.sellem.sqlqueries;

import java.sql.SQLException;

import com.braffa.sellem.model.sql.UserToProduct;
import com.braffa.sellem.model.xml.UserToProductXml;

public class UserToProductSQL {

	public String createTableSQL() throws SQLException {
		StringBuffer sql = new StringBuffer("CREATE TABLE USERTOPRODUCT ");
		sql.append(" (id INT NOT NULL AUTO_INCREMENT, ");
		sql.append(" userId VARCHAR(20), " + " productId VARCHAR(20), ");
		sql.append(" productIndex INT, ");
		sql.append(" CRDATE TIMESTAMP,      ");
		sql.append(" UPDDATE TIMESTAMP,     ");
		sql.append(" PRIMARY KEY ( id ))");
		return sql.toString();
	}

	public String createTableHsql() throws SQLException {
		StringBuffer sql = new StringBuffer("CREATE TABLE USERTOPRODUCT ");
		sql.append(" (id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null, ");
		sql.append(" userId VARCHAR(20), " + " productId VARCHAR(20), ");
		sql.append(" productIndex VARCHAR(20), ");
		sql.append(" CRDATE TIMESTAMP,      ");
		sql.append(" UPDDATE TIMESTAMP,     ");
		sql.append(" PRIMARY KEY ( id ))");
		return sql.toString();
	}

	public String createSQL(UserToProduct userToProduct) throws SQLException {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO USERTOPRODUCT (userId, productId, productIndex, CRDATE, UPDDATE) VALUES (");
		sql.append("'" + userToProduct.getUserId() + "', ");
		sql.append("'" + userToProduct.getProductId() + "', ");
		sql.append("'" + userToProduct.getProductIndex() + "', ");
		sql.append("CURRENT_TIMESTAMP, ");
		sql.append("CURRENT_TIMESTAMP ");
		sql.append(")");
		return sql.toString();
	}

	public String deleteSQL(UserToProduct userToProduct) throws SQLException {
		StringBuffer sb = new StringBuffer("DELETE FROM USERTOPRODUCT ");
		sb.append(" WHERE productId = '" + userToProduct.getProductId() + "'");
		sb.append(" AND   productIndex = '" + userToProduct.getProductIndex() + "'");
		sb.append(" AND   userId = '" + userToProduct.getUserId() + "'");
		return sb.toString();
	}

	public String dropSQL() throws SQLException {
		return "DROP TABLE USERTOPRODUCT ";
	}

	public String readSQL(UserToProduct userToProduct) throws SQLException {
		boolean hasProductId = (userToProduct.getProductId() != null && userToProduct.getProductId().length() > 0)
				? true : false;
		boolean hasProductIndex = (userToProduct.getProductIndex() != null
				&& userToProduct.getProductIndex().length() > 0) ? true : false;
		boolean hasUserId = (userToProduct.getUserId() != null && userToProduct.getUserId().length() > 0) ? true
				: false;
		StringBuffer sb = new StringBuffer("SELECT ID, USERID, productId, productIndex, CRDATE, UPDDATE FROM USERTOPRODUCT WHERE ");
		if (hasProductId && hasProductIndex && hasUserId) {
			sb.append(" productId = '");
			sb.append(userToProduct.getProductId());
			sb.append("' AND productIndex = '");
			sb.append(userToProduct.getProductIndex());
			sb.append("' AND userId = '");
			sb.append(userToProduct.getUserId());
			sb.append("'");
		} else if (hasProductId && hasProductIndex) {
			sb.append(" productId = '");
			sb.append(userToProduct.getProductId());
			sb.append("' AND productIndex = '");
			sb.append(userToProduct.getProductIndex());
			sb.append("'");
		} else if (hasProductId && hasUserId) {
			sb.append(" productId = '");
			sb.append(userToProduct.getProductId());
			sb.append("' AND userId = '");
			sb.append(userToProduct.getUserId());
			sb.append("'");
		} else if (hasProductId) {
			sb.append(" productId = '");
			sb.append(userToProduct.getProductId());
			sb.append("'");
		} else if (hasUserId) {
			sb.append(" userId = '");
			sb.append(userToProduct.getUserId());
			sb.append("'");
		}
		return sb.toString();
	}

	public String readAllSQL() throws SQLException {
		return "SELECT ID, USERID, productId, productIndex, CRDATE, UPDDATE FROM USERTOPRODUCT ";
	}

	public String updateSQL(UserToProduct userToProduct) {
		StringBuffer sb = new StringBuffer("UPDATE USERTOPRODUCT SET ");
		boolean comma = false;
		if (userToProduct.getProductId().length() > 0) {
			sb.append("productId = '" + userToProduct.getProductId() + "' ");
			comma = true;
		}
		if (userToProduct.getProductIndex().length() > 0) {
			if (comma) {
				sb.append(", productIndex = '" + userToProduct.getProductIndex() + "' ");
				comma = false;
			} else {
				sb.append("productIndex = '" + userToProduct.getProductIndex() + "' ");
				comma = true;
			}
		}
		sb.append("WHERE USERID = '" + userToProduct.getUserId() + "'");
		return sb.toString();
	}

}
